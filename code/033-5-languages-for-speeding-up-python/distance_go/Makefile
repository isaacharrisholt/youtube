# Makefile for python interface for package distance_go.
# File is generated by gopy. Do not edit.
# gopy build -vm=python3 -output=distance_go ./go_src

GOCMD=go
GOBUILD=$(GOCMD) build -mod=mod
GOIMPORTS=goimports
PYTHON=/home/isaac/repos/youtube/033-5-languages-for-speeding-up-python/.venv/bin/python3
LIBEXT=.so

# get the CC and flags used to build python:
GCC = $(shell $(GOCMD) env CC)
CFLAGS = -I/usr/include/python3.11
LDFLAGS = -L/usr/lib/x86_64-linux-gnu -lpython3.11 -lpthread -ldl  -lutil -lm

all: gen build

gen:
	gopy gen -no-make -vm=python3 ./go_src

build:
	# build target builds the generated files -- this is what gopy build does..
	# this will otherwise be built during go build and may be out of date
	- rm distance_go.c
	# goimports is needed to ensure that the imports list is valid
	$(GOIMPORTS) -w distance_go.go
	# generate distance_go_go$(LIBEXT) from distance_go.go -- the cgo wrappers to go functions
	$(GOBUILD) -buildmode=c-shared -o distance_go_go$(LIBEXT) distance_go.go
	# use pybindgen to build the distance_go.c file which are the CPython wrappers to cgo wrappers..
	# note: pip install pybindgen to get pybindgen if this fails
	$(PYTHON) build.py
	# build the _distance_go$(LIBEXT) library that contains the cgo and CPython wrappers
	# generated distance_go.py python wrapper imports this c-code package
	
	$(GCC) distance_go.c  distance_go_go$(LIBEXT) -o _distance_go$(LIBEXT) $(CFLAGS) $(LDFLAGS) -fPIC --shared -w
	


